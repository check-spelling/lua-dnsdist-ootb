-- Update the search path and load the module
package.path = "/etc/dnsdist/" .. package.path
dnsdist_utils = require "dnsdist_utils"

-- complete configuration example with default values
opts = {
        -- Start a complete dns server with doh, dot and dns
        listen = {
                dns = {ip4="0.0.0.0", ip6="[::]", port=53},
                doh = {ip4="0.0.0.0", ip6="[::]", port=443, cert="/etc/dnsdist/cert.pem", key="/etc/dnsdist/key.pem"},
                dot = {ip4="0.0.0.0", ip6="[::]", port=853, cert="/etc/dnsdist/cert.pem", key="/etc/dnsdist/key.pem"},
        },

        -- Enable admin console and web server
        admin = {
                console = {ip4="0.0.0.0", port=5199, acl="127.0.0.1/8", key="pVC5gO/HECwOfgFzQDjAy6v5mWYmpwcj2h546GjqDgg="},
                web = {ip4="0.0.0.0", port=8083, acl="0.0.0.0/0", apikey="<secret>", password="<secret>"},
                secpoll = {interval=3600, suffix="secpoll.powerdns.com."},
        },

        -- Remote logging of all queries and replies
        -- log blocked or forwarded traffic
        --   ip=<string> remote ip of the log collector
        --   port=<integer> remote port of the log collector
        --   protocol=<string> dnstap|protobuf
        logging = {
                forwarded = {protocol="dnstap", ip="192.168.1.15", port=6000},
                blocked = {protocol="dnstap", ip="192.168.1.15", port=6000},
        },

        -- enable blocklist for ads/tracking/malware domains
        -- loading cdb database:
        --    file=<string> CDB database to read
        --    reload=<integer> check every X seconds if the database need to be re-open
        --    spoof=<string> nxdomain|localhost
        blocklist = {
                cdb={file="/etc/dnsdist/blocklist.cdb", reload=3600, spoof="nxdomain"}
        },

        -- Forward all dns traffic to a pool of default DNS and DoH servers
        forwarders = {
                dns={
                        {ip="8.8.8.8", port=53},
                        {ip="9.9.9.9", port=53},
                        {ip="1.1.1.1", port=53}
                },
                doh={
                        {ip="8.8.8.8", port=443, name="dns.google"},
                        {ip="1.1.1.1", port=443, name="cloudflare-dns.com"}
                }
        },

}

-- load the dnsdist configuration
dnsdist_utils.runServer{opts=opts}